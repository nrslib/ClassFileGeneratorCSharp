<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
interface <#= interfaceName #>
<# if(implementsSetting.HasAny){ #>
    extends <#= implementsSetting.HeadImplement #>
<#   foreach(var elem in implementsSetting.TailImplement) { #>
    , <#= elem #>
<#   } #>
<# } #>{
<# foreach(var field in fields){ #>
    <# if(field.IsReadonly) { #>readonly <# } #><#= field.Name #>: <#= field.Type #>;
<# } #>
<# if(fields.Any() && methods.Any()){ #>

<# } #>
<# foreach(var method in methods){ #>
    <#= method.Name #><# if(method.HasAnyGenerics){ #><<#= method.GenericsList #>><# } #>(<#= method.ArgumentsText(formatter) #>): <#= method.ReturnType #>;
<# } #>}
